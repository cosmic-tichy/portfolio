{"remainingRequest":"/home/nick/portfolio/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/nick/portfolio/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/nick/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nick/portfolio/src/components/about.vue?vue&type=template&id=277a612d&scoped=true&","dependencies":[{"path":"/home/nick/portfolio/src/components/about.vue","mtime":1602022042943},{"path":"/home/nick/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1600960083207},{"path":"/home/nick/portfolio/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1600960081591},{"path":"/home/nick/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1600960083207},{"path":"/home/nick/portfolio/node_modules/vue-loader/lib/index.js","mtime":1600960081591}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}